<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="meetingattendance.aspx.cs" Inherits="WebApplication1_MAL.meetingattendance1" %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Meeting Attendance Tapping</title>

    <!-- Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nunito">

    <!-- Custom styles -->
    <link href="css/styles.css" rel="stylesheet" />
    <!-- Custom styles1 -->
    <link href="Scripts2/styles.css" rel="stylesheet" />

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

    <!-- Existing JS -->
    <script src="Scripts2/jquery-3.2.0.min.js"></script>
    <script src="Scripts2/all.min.js"></script>

    <style>
        .custom-input {
            font-size: 2rem;
            padding: 1rem 1.5rem;
        }

        .form-check input[type="radio"] {
            width: 1.5em;
            height: 1.5em;
        }

        .form-check label {
            font-size: 1.25rem;
            padding-left: 0.5em;
        }
    </style>
</head>

<body class="sb-nav-fixed">
    <form id="form1" runat="server">
        <!-- Top Navbar -->
        <nav class="navbar navbar-expand" style="background-color: #10218B;" data-bs-theme="dark">
            <div class="container-fluid">
                <a class="navbar-brand ps-3" href="Home1.aspx" style="font-weight: bold; font-family: nunito; font-size: 17px;">Meeting Attendance Tapping</a>
                <!-- Sidebar Toggle-->
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item"><a class="nav-link" href="Home1.aspx">Dashboard</a></li>
                        <li class="nav-item"><a class="nav-link active" href="meetinglist1.aspx">Meetings</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">History Logs</a></li>
                    </ul>
                </div>
                <!-- User Dropdown -->
                <ul class="navbar-nav ms-auto me-3">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-user fa-fw"></i></a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="#">Logout</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>



        <main>
            <div class="container-fluid px-4">

                <h1 class="mt-3">
                    <asp:Label ID="lblTitle" runat="server" Text="Title"></asp:Label>
                </h1>
                <ol class="breadcrumb mb-4 mt-3">
                    <li class="breadcrumb-item active">
                        <asp:Label ID="lblDateTime" runat="server" Text="Date / Time"></asp:Label>
                    </li>
                </ol>

                <!-- Hidden Meeting ID -->
                <asp:HiddenField ID="hfMeetingID" runat="server" />

                <div class="row">
                    <div class="col-3 col-lg-3 mb-3">
                        <input type="radio" class="btn-check" name="options-outlined" id="radioIn" autocomplete="off" checked>
                        <label class="btn btn-outline-primary w-100 btn-lg" for="radioIn">In</label>
                    </div>
                    <div class="col-3 col-lg-3 mb-3">
                        <input type="radio" class="btn-check" name="options-outlined" id="radioOut" autocomplete="off">
                        <label class="btn btn-outline-secondary w-100 btn-lg" for="radioOut">Out</label>
                    </div>
                    <div class="col-6 d-flex justify-content-end">
                        <div>
                            <button class="btn btn-info text-white me-2 w-auto">View Attendees</button>
                            <button class="btn btn-danger w-auto">End Meeting</button>
                        </div>
                    </div>
                </div>


<div class="mb-3">
    <asp:TextBox ID="txtCardSerial" runat="server" CssClass="form-control custom-input"
        placeholder="Place your ID card on the reader"
        AutoPostBack="true" OnTextChanged="txtCardSerial_TextChanged"></asp:TextBox>
</div>


                <div class="mt-3">
                    <asp:Panel ID="pnlAlert" runat="server" Visible="false"
                        CssClass="alert alert-dismissible fade show" role="alert">
                        <h4 class="alert-heading">
                            <asp:Label ID="lblAlertHeading" runat="server"></asp:Label>
                        </h4>
                        <h3><asp:Label ID="lblAlertName" runat="server"></asp:Label></h3>
                        <h5><asp:Label ID="lblAlertDept" runat="server"></asp:Label></h5>
                        <p>
                            <asp:Label ID="lblAlertDateTime" runat="server"></asp:Label>
                        </p>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </asp:Panel>
                </div>

                <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

                <!-- Auto fade-out -->
                <script type="text/javascript">
                    function fadeOutAlert() {
                        var alertBox = document.getElementById('<%= pnlAlert.ClientID %>');
                        if (alertBox && alertBox.style.display !== "none") {
                            setTimeout(function () {
                                var bsAlert = new bootstrap.Alert(alertBox);
                                bsAlert.close();
                            }, 3000); // disappear after 3s
                        }
                    }
                </script>





            </div>
        </main>
    </form>

    <!-- Scripts already in your footer -->
    <script src="Scripts2/bootstrap.bundle.min.js"></script>
    <script src="Scripts2/scripts.js"></script>
    <script src="Scripts2/simple-datatables.js"></script>
    <script src="Scripts2/datatables-simple-demo.js"></script>
</body>
</html>


-- Code Behind

using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebApplication1_MAL
{
    public partial class meetingattendance1 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                string meetingId = Request.QueryString["meetingId"];
                if (!string.IsNullOrEmpty(meetingId))
                {
                    LoadMeetingDetails(meetingId);
                }
                else
                {
                    lblTitle.Text = "Invalid Meeting";
                    lblDateTime.Text = "";
                }
            }
        }

        private void LoadMeetingDetails(string meetingId)
        {
            string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;

            using (SqlConnection conn = new SqlConnection(connStr))
            using (SqlCommand cmd = new SqlCommand("MA_GetMeetingDetails", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@MeetingId", meetingId);

                conn.Open();
                SqlDataReader reader = cmd.ExecuteReader();
                if (reader.Read())
                {
                    lblTitle.Text = reader["Title"].ToString();
                    //lblDateTime.Text = $"{Convert.ToDateTime(reader["StartDateTime"]):MM-dd-yyyy hh:mm tt} - {Convert.ToDateTime(reader["EndDateTime"]):MM-dd-yyyy hh:mm tt}";
                    lblDateTime.Text = $"{reader["Venue"]} / {Convert.ToDateTime(reader["StartDateTime"]):MMMM dd, yyyy hh:mm tt} - {Convert.ToDateTime(reader["EndDateTime"]):hh:mm tt}";
                    hfMeetingID.Value = meetingId;
                }
                else
                {
                    lblTitle.Text = "Meeting not found";
                    lblDateTime.Text = "";
                }
            }
        }

        protected void btnViewAttendees_Click(object sender, EventArgs e)
        {
            string meetingId = hfMeetingID.Value; // assuming it's stored
            Response.Redirect($"viewattendees.aspx?meetingId={meetingId}");
        }






 protected void txtCardSerial_TextChanged(object sender, EventArgs e)
 {
     string cardSerial = txtCardSerial.Text.Trim();
     string meetingId = hfMeetingID.Value;

     if (string.IsNullOrEmpty(cardSerial))
     {
         //ShowAlert("⚠ Please place your card on the reader.", "alert-warning");
         //return;
         ShowAlert("Invalid Tap", "Please place your card on the reader.", "", "alert-warning");
         return;
     }

     string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;

     using (SqlConnection conn = new SqlConnection(connStr))
     {
         conn.Open();

         // 1. Validate Employee
         string empName = "";
         string dept = "";
         string sec = "";

         using (SqlCommand cmd = new SqlCommand("MA_CheckEmployeeByCard", conn))
         {
             cmd.CommandType = System.Data.CommandType.StoredProcedure;
             cmd.Parameters.AddWithValue("@CardSerialNo", cardSerial);

             SqlDataReader reader = cmd.ExecuteReader();
             if (!reader.Read())
             {
                 //ShowAlert("❌ Card not registered in the system.", "alert-danger");
                 //return;
                 ShowAlert("Card Not Registered", "Unknown Card", "", "alert-danger");
                 return;
             }

             empName = reader["FirstName"].ToString();
             dept = reader["LastName"].ToString();
             sec = reader["FirstName"].ToString();
             reader.Close();
         }

         // 2. Insert participant (with duplicate prevention)
         using (SqlCommand insertCmd = new SqlCommand("MA_InsertAttendee", conn))
         {
             insertCmd.CommandType = System.Data.CommandType.StoredProcedure;
             insertCmd.Parameters.AddWithValue("@MeetingId", meetingId);
             insertCmd.Parameters.AddWithValue("@CardSerialNo", cardSerial);

             object result = insertCmd.ExecuteScalar();

             if (result != null && result.ToString() == "0")
             {
                 //ShowAlert($"⚠ {empName} already tapped in for this meeting.", "alert-warning");
                 ShowAlert("Already Tapped In", empName, $"{dept} - {sec}", "alert-warning");
             }
             else
             {
                 //ShowAlert($"✅ Successfully tapped in: {empName} ({dept} - {sec})", "alert-success");
                 ShowAlert("You have tapped in successfully!", empName, $"{dept} - {sec}", "alert-success");
             }
         }

         // Clear for next tap
         txtCardSerial.Text = "";
     }
 }






        private void ShowAlert(string heading, string fullName, string dept, string cssClass)
        {
            pnlAlert.Visible = true;
            pnlAlert.CssClass = $"alert {cssClass} alert-dismissible fade show";

            lblAlertHeading.Text = heading;
            lblAlertName.Text = fullName;
            lblAlertDept.Text = dept;
            lblAlertDateTime.Text = DateTime.Now.ToString("MMMM dd, yyyy hh:mm tt");

            // auto fade-out
            ScriptManager.RegisterStartupScript(this, GetType(), "fadeOutAlert", "fadeOutAlert();", true);
        }




    }
}



